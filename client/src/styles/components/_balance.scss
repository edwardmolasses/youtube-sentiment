@use "../shared" as *;

.balance {
  background: transparent;
  height: 100%;
  z-index: 0;
  
  

  &-init {
    z-index: $z-ultimate !important;
    animation: borderPulse 2s linear infinite;
    border: 1px solid $color-crosshairs-note;
    z-index: 0;

    .drag-note {
      position: absolute;
      color: $color-crosshairs;
      font-size: $type-teeny;
      top: 24px;
      left: -36px;
      transform: rotate(-90deg);

      &:after {
        content: "DRAG / RESIZE";
      }
    }
  }

  &-container {
    display: flex;
    flex-direction: column;
    align-items: stretch;
  }

  &-enabled {
    @extend .balance;

    background: linear-gradient(
          to right,
          $color-crosshairs 1px,
          transparent 1px
        )
        0 0,
      linear-gradient(to right, $color-crosshairs 1px, transparent 1px) 0 100%,
      linear-gradient(to left, $color-crosshairs 1px, transparent 1px) 100% 0,
      linear-gradient(to left, $color-crosshairs 1px, transparent 1px) 100% 100%,
      linear-gradient(to bottom, $color-crosshairs 1px, transparent 1px) 0 0,
      linear-gradient(to bottom, $color-crosshairs 1px, transparent 1px) 100% 0,
      linear-gradient(to top, $color-crosshairs 1px, transparent 1px) 0 100%,
      linear-gradient(to top, $color-crosshairs 1px, transparent 1px) 100% 100%;
    background-repeat: no-repeat;
    background-size: 12px 12px;
    background-color: $color-white-element; // drag -- don't forget requires background-color to override
  }

  &-disabled {
    @extend .balance-enabled;
    background: none;
    background-color: $color-white-element;
  }

  &-item {
    text-align: center;
    align-items: center;
    justify-content: center;
    margin: 24px;
  }

  &-rollup {
    min-height: 96px;
    display: flex;
    border-radius: $radius-default;
    background: $color-white-hint;
    vertical-align: middle;
    justify-content: center;
    align-items: center;
    font-size: $type-lg;
    font-weight: $default;
    margin: 12px 0;

    h1 {
      font-size: $type-h1;
      font-weight: $default;
      padding: 0;
      margin: 0;

      span {
        color: $color-white-half;
        font-weight: $default;
      }
    }

    small {
      font-size: $type-sm;
      font-weight: $regular;
      color: $color-white-default;

      span {
        color: $color-white-half;
        font-weight: $default;
      }
    }
  }


  &-data {
    display: flex;
    flex-direction: column;
    margin: 12px 24px;

    scrollbar-color: $color-brand;

    overflow-y: scroll;
    overflow-x: hidden;
    scrollbar-color: $color-brand-slight $color-white-hint; /* thumb and track color */
    scrollbar-width: thin;
    position: absolute;
    top: 120px;
    bottom: 0;
    left: 0;
    right: 0;
    height: auto;
    padding: 12px;
    -webkit-overflow-scrolling: touch; /* Lets it scroll lazy */
   

    h3 {
      color: $color-white;
      padding: 0;
      margin: 0;
      font-weight: $default;
      font-size: $type-sm;
      word-wrap: break-word;
    }

    // for error message
    b {
      color: $color-pink-default;
      font-weight: $regular;
      font-size: $type-default;
    }

    small {
      padding: 0;
      margin: 0;
      color: $color-white-medium;
      font-weight: $default;
      font-size: $type-tiny;

      span {
        i {
          color: $color-mid;
          font-size: $type-tiny;
          padding: 0 3px;
        }

        font-weight: $regular;
        color: $color-mid;
      }
    }


  }
}
